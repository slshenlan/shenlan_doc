import{_ as s,o as n,c as a,S as l}from"./chunks/framework.3d018db5.js";const u=JSON.parse('{"title":"远程调试","description":"","frontmatter":{},"headers":[],"relativePath":"docs/frontend/code/remote-debugging.md","filePath":"docs/frontend/code/remote-debugging.md","lastUpdated":1729236017000}'),p={name:"docs/frontend/code/remote-debugging.md"},e=l(`<h1 id="远程调试" tabindex="-1">远程调试 <a class="header-anchor" href="#远程调试" aria-label="Permalink to &quot;远程调试&quot;">​</a></h1><h2 id="服务端开启" tabindex="-1">服务端开启 <a class="header-anchor" href="#服务端开启" aria-label="Permalink to &quot;服务端开启&quot;">​</a></h2><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#676E95;font-style:italic;"># 直接执行</span></span>
<span class="line"><span style="color:#FFCB6B;">page-spy-api</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h2 id="前端接入" tabindex="-1">前端接入 <a class="header-anchor" href="#前端接入" aria-label="Permalink to &quot;前端接入&quot;">​</a></h2><div class="vp-code-group"><div class="tabs"><input type="radio" name="group-hyTXj" id="tab-C9BmT3T" checked="checked"><label for="tab-C9BmT3T">引入</label><input type="radio" name="group-hyTXj" id="tab-T-QIsBJ"><label for="tab-T-QIsBJ">初始化</label></div><div class="blocks"><div class="language-html active line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">crossorigin</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">anonymous</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">src</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">https://fengniao.yebin.vip/page-spy/index.min.js</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">  </span><span style="color:#676E95;font-style:italic;">// 所有参数都是可选的，以下是各个参数的说明及其默认值</span></span>
<span class="line"><span style="color:#A6ACCD;">  window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">$pageSpy </span><span style="color:#89DDFF;">=</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">new</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">PageSpy</span><span style="color:#A6ACCD;">(</span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// SDK 会从引入的路径自动分析并决定 Server 的地址（api）和调试端的地址（clientOrigin）</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 假设你从 https://example.com/page-spy/index.min.js 引入，那么 SDK 会在内部设置：</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   - api: &quot;example.com&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   - clientOrigin: &quot;https://example.com&quot;</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果你的服务部署在别处，就需要在这里手动指定去覆盖。</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">api</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">clientOrigin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// project 作为信息的一种聚合，可以在调试端房间列表进行搜索</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">project</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">default</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// title 供用户提供自定义参数，可以用于区分当前调试的客户端</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 对应的信息显示在每个调试连接面板的「设备id」下方</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">title</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">--</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 指示 SDK 初始化完成，是否自动在客户端左下角渲染「圆形白底带 Logo」的控件</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 如果设置为 false, 可以调用 window.$pageSpy.render() 手动渲染</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">autoRender</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FF9CAC;">true</span><span style="color:#89DDFF;">,</span></span>
<span class="line"></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 手动指定 PageSpy 服务的 scheme。</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 这在 SDK 无法正确分析出 scheme 可以使用，例如 PageSpy 的浏览器插件</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 是通过 chrome-extension://xxx/sdk/index.min.js 引入 SDK，这会</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">// 被 SDK 解析成无效的 &quot;chrome-extension://&quot; 并回退到 [&quot;http://&quot;, &quot;ws://&quot;]。</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   - （默认）传值 undefined 或者 null：SDK 会自动分析；</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//   - 传递 boolean 值：</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     - true：SDK 将通过 [&quot;https://&quot;, &quot;wss://&quot;] 访问 PageSpy 服务</span></span>
<span class="line"><span style="color:#89DDFF;">    </span><span style="color:#676E95;font-style:italic;">//     - false：SDK 将通过 [&quot;http://&quot;, &quot;ws://&quot;] 访问 PageSpy 服务</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#F07178;">enableSSL</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">null</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#89DDFF;">}</span><span style="color:#A6ACCD;">)</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">script</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br></div></div></div></div>`,5),o=[e];function t(c,r,i,y,D,F){return n(),a("div",null,o)}const d=s(p,[["render",t]]);export{u as __pageData,d as default};
